name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Lint
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci -f

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build

  deploy:
    name: Deploy to Production
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export REPO_DIR="/home/${{ secrets.SSH_USERNAME }}/${{ github.event.repository.name }}"
            if [ ! -d "$REPO_DIR" ]; then
              mkdir -p "$REPO_DIR"
              cd "$REPO_DIR"
              git clone -b main https://github.com/${{ github.repository }}.git .
            else
              cd "$REPO_DIR"
              git fetch origin main
              git checkout main
              git pull origin main
            fi
            
            # Install dependencies and build
            npm ci -f
            npm run build
            
            # Setup and start PM2
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Start or restart the application
            pm2 describe "nextjs-app" > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart nextjs-app
            else
              pm2 start npm --name "nextjs-app" -- start
            fi
            
            # Save PM2 configuration and setup startup
            pm2 save
            pm2 startup

